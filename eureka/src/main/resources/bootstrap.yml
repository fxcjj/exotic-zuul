server:
  port: 9761
spring:
  application:
    name: eureka
eureka:
  # eureka实例相关配置
  instance:
    # eureka实例主机名
    hostname: localhost
    # 表示在eureka server在接收到上一个心跳之后等待下一个心跳的秒数（默认90秒），若不能在指定时间内收到心跳，则移除此实例，并禁止此实例的流量
    # 必须高于 lease-renewal-interval-in-seconds
    #    lease-expiration-duration-in-seconds: 90
    # 表示 Eureka Client 向 Eureka Server 发送心跳的频率（默认 30 秒），
    # 如果在 lease-expiration-duration-in-seconds 指定的时间内未收到心跳，则移除该实例。貌似在eureka server中配置没什么用处！
  #    lease-renewal-interval-in-seconds: 20
  client:
    service-url:
      # 集群环境中，其它的eureka节点
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
    # 指示此实例是否应将其信息注册到eureka服务器以供其他人发现
    # 如果是单个节点，应该设置为false，表示自己就是注册中心，不用注册自己。
    # 在集群环境中，应该设置为true，表示注册自己（defaultZone不用填自己地址，填写其它eureka服务地址）
    register-with-eureka: false
    # 表示是否此client从eureka server拉取eureka注册信息。
    # 如果是单个服务，应该设置为false，表示自己就是注册中心，不用去注册中心获取其他服务的地址。
    # 在集群环境中，应该设置为true，表示从eureka server中拉取其它服务信息。
    fetch-registry: false
  server:
    # 自我保护模式，默认打开（当出现网络分区导致丢失过多客户端时，不删除任何微服务）
    enable-self-preservation: false
    # eureka server清理无效节点的时间间隔，默认60000毫秒，即60秒
    eviction-interval-timer-in-ms: 10000
    # 禁用Eureka的ReadOnlyMap缓存，解决eureka 的双缓存问题
#    use-read-only-response-cache: false
